# 系统优化配置文件 - 按功能分类整理
# 优化时间: 2023-11-20 10:00:00

################################################################################
# 1. 基础系统参数优化
################################################################################
# 内核恐慌时，自动重启的等待时间（秒）
# 取值范围: 0-600，设置为1表示发生内核恐慌后1秒自动重启
kernel.panic = 1

# 系统允许的最大PID值
# 取值范围: 30000-4194303，增加该值可以支持更多进程同时运行
kernel.pid_max = 32768

# 设定程序崩溃时生成的核心转储文件名格式
# %e 表示进程名称
kernel.core_pattern = core_%e

# 关闭sysrq组合键，提高系统安全性
# 取值范围: 0-1，0表示禁用，1表示启用
kernel.sysrq = 0


################################################################################
# 2. 内存管理优化
################################################################################
# 控制系统交换行为的程度
# 取值范围: 0-100，值越低表示尽量使用物理内存，0表示最大限度使用物理内存
vm.swappiness = 20

# 当发生OOM（内存不足）时，是否自动触发内核恐慌
# 取值范围: 0-1，0表示不触发，1表示触发
# 注意: 生产环境建议设置为0，让系统自动处理内存不足情况
#vm.panic_on_oom = 1

# 强制Linux VM最低保留的空闲内存（KB）
# 根据系统内存大小调整，一般设置为物理内存的1%-2%
# 取值范围: 根据系统内存大小调整，建议值: 102400-2097152
vm.min_free_kbytes = 1048576

# 控制内核回收目录和inode缓存的倾向
# 取值范围: 1-1000，大于100表示倾向于回收缓存
# 建议值: 100-300，250表示积极回收
vm.vfs_cache_pressure = 250

# 当文件系统缓存的脏数据达到系统内存的百分比时，系统会强制将脏数据写回磁盘
# 取值范围: 5-80，建议值: 10-20
vm.dirty_ratio = 10


################################################################################
# 3. 共享内存与信号量优化
################################################################################
# 内核所允许的最大共享内存段的大小（字节）
# 建议设置为系统物理内存的一半左右
kernel.shmmax = 4294967296

# 在任何给定时刻，系统上都可以使用的共享内存页数
# 计算公式: 物理内存(MB) * 1024 * 1024 / 4096
kernel.shmall = 1073741824

# 系统范围内共享内存段的最大数量
# 取值范围: 1-32768，建议值: 32768
kernel.shmmni = 32768

# 系统信号量参数设置
# 格式: semmsl semmns semopm semmni
# semmsl: 每个信号量集的最大信号量数
# semmns: 系统范围内的最大信号量数
# semopm: 每个semop系统调用可以执行的操作数
# semmni: 系统范围内的最大信号量集数
kernel.sem = 10000 2560000 10000 256

# 消息队列相关设置
# 系统范围内的最大消息队列标识符数量
kernel.msgmni = 32768
# 单个消息的最大字节数
kernel.msgmax = 65536
# 单个消息队列的最大字节数
kernel.msgmnb = 4203520


################################################################################
# 4. 文件系统优化
################################################################################
# 设置系统所有进程一共可以打开的文件数量上限
# 建议值: 根据系统内存和预期负载调整，一般为1000000-50000000
fs.file-max = 40000500

# 单个进程可以打开的最大文件数
# 必须小于或等于fs.file-max
fs.nr_open = 40000500


################################################################################
# 5. 网络基础优化
################################################################################
# 是否开启IP转发功能
# 取值范围: 0-1，0表示禁用，1表示启用
# 仅在服务器作为路由器或网关时设置为1
net.ipv4.ip_forward = 0

# IP数据包的生存时间(TTL)
# 取值范围: 1-255，默认值: 64
net.ipv4.ip_default_ttl = 64

# 控制ARP公告行为
# 取值范围: 0-2
# 0: 使用任何本地地址
# 1: 尽量使用匹配目标IP的本地地址
# 2: 只使用匹配目标IP的本地地址
net.ipv4.conf.all.arp_announce = 2
net.ipv4.conf.default.arp_announce = 2
net.ipv4.conf.lo.arp_announce = 2

# ARP缓存优化
# 决定检查过期邻居条目的时间（秒）
net.ipv4.neigh.default.gc_stale_time = 120
# ARP缓存级别设置
net.ipv4.neigh.default.gc_thresh1 = 128  # 最少保留的ARP缓存条目数
net.ipv4.neigh.default.gc_thresh2 = 512  # 开始垃圾回收的ARP缓存条目数
net.ipv4.neigh.default.gc_thresh3 = 4096 # 最大ARP缓存条目数

# IPv6相关设置
# 注意: 完全禁用IPv6可能会导致某些服务（如NFS、rpcbind）无法正常启动
#net.ipv6.conf.all.disable_ipv6 = 1
#net.ipv6.conf.default.disable_ipv6 = 1
#net.ipv6.conf.lo.disable_ipv6 = 1


################################################################################
# 6. TCP/IP 性能优化
################################################################################
# 启用BBR拥塞控制算法，提高网络传输效率
# 要求Linux内核版本4.9以上
net.core.default_qdisc = fq
net.ipv4.tcp_congestion_control = bbr

# 网络设备接收队列大小
# 建议值: 对于高流量服务器，设置为10000-500000
net.core.netdev_max_backlog = 409600

# 已建立连接的套接字队列长度
# 建议值: 1024-1000000
net.core.somaxconn = 409600

# 每个套接字所允许的最大缓冲区大小（字节）
net.core.optmem_max = 25165824

# 默认TCP数据发送窗口大小（字节）
net.core.wmem_default = 8388608
# 默认TCP数据接收窗口大小（字节）
net.core.rmem_default = 8388608
# 最大TCP数据发送窗口大小（字节）
net.core.wmem_max = 16777216
# 最大TCP数据接收窗口大小（字节）
net.core.rmem_max = 16777216

# 开启TCP窗口缩放
# 取值范围: 0-1，1表示启用
net.ipv4.tcp_window_scaling = 1

# SYN队列长度，处理并发连接请求
# 建议值: 1024-1000000
net.ipv4.tcp_max_syn_backlog = 3240000

# SYN重传次数
# 取值范围: 1-128，建议值: 3-5
net.ipv4.tcp_syn_retries = 3       # 客户端发起连接时的SYN重试次数
net.ipv4.tcp_synack_retries = 3    # 服务端响应连接时的SYN+ACK重试次数

# TIME-WAIT状态相关设置
# 系统同时保持TIME-WAIT状态的最大数量
# 建议值: 10000-500000
net.ipv4.tcp_max_tw_buckets = 20000

# 允许重用处于TIME-WAIT状态的套接字用于新的连接
# 取值范围: 0-1，1表示启用
net.ipv4.tcp_tw_reuse = 1

# 启用TIME-WAIT快速回收（不推荐在NAT网络中使用）
# 注意: 与tcp_timestamps一起启用时可能会导致连接问题
#net.ipv4.tcp_tw_recycle = 1

# TCP连接的FIN-WAIT-2状态超时时间（秒）
# 取值范围: 1-600，建议值: 10-60
net.ipv4.tcp_fin_timeout = 10

# TCP保活参数设置
# 保活探测间隔时间（秒）
# 建议值: 120-3600
net.ipv4.tcp_keepalive_time = 300
# 保活探测失败后的重试间隔时间（秒）
net.ipv4.tcp_keepalive_intvl = 2
# 保活探测失败多少次后认为连接已断开
net.ipv4.tcp_keepalive_probes = 2

# TCP缓冲区内存使用限制
# 格式: 最小 默认 最大（字节）
net.ipv4.tcp_rmem = 4096 87380 67108864  # 接收缓冲区
net.ipv4.tcp_wmem = 4096 65536 67108864  # 发送缓冲区
net.ipv4.tcp_mem = 379008 505344 758016  # 整体内存使用

# 系统处理不属于任何进程的TCP套接字最大数量
# 建议值: 100000-1000000
net.ipv4.tcp_max_orphans = 262144

# 开启TCP时间戳选项
# 取值范围: 0-1，1表示启用
# 与tcp_tw_recycle一起使用时可能会导致连接问题
net.ipv4.tcp_timestamps = 1

# 开启TCP MTU探测功能，可以动态适应网络环境，避免分片
# 取值范围: 0-2，1表示启用
net.ipv4.tcp_mtu_probing = 1

# 本地端口范围
# 格式: 起始端口 结束端口
# 建议值: 10000-65000，提供足够的端口用于出站连接
net.ipv4.ip_local_port_range = 10000 65000

# 增加路由表大小
net.ipv4.route.max_size = 5242880


################################################################################
# 7. 网络安全优化
################################################################################
# 开启SYN洪水攻击保护
# 取值范围: 0-1，1表示启用
# 当出现SYN等待队列溢出时，启用cookies来处理
net.ipv4.tcp_syncookies = 1

# 反向路径过滤设置
# 取值范围: 0-2
# 0: 禁用反向路径过滤
# 1: 松散模式，只要有一个网卡的路由可达就接受
# 2: 严格模式，必须与接收接口的路由完全匹配
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1

# 是否接受源路由数据包
# 取值范围: 0-1，0表示禁用，提高安全性
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

# 是否接受ICMP重定向消息
# 取值范围: 0-1，0表示禁用，提高安全性
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.secure_redirects = 0

# 开启并记录欺骗、源路由和重定向包
# 取值范围: 0-1，1表示启用
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.log_martians = 1

# 设置连接跟踪表大小
# 建议值: 100000-2000000，根据并发连接数调整
net.netfilter.nf_conntrack_max = 1000000
net.nf_conntrack_max = 1000000
#net.ipv4.netfilter.ip_conntrack_max = 1000000


################################################################################
# 8. 特定应用优化（如Swoole）
################################################################################
# Unix域数据报套接字的最大队列长度
net.unix.max_dgram_qlen = 100


################################################################################
# 9. 性能分析工具设置
################################################################################
# perf分析工具最大能够占用CPU性能的百分比
# 取值范围: 1-100，建议值: 30-70
kernel.perf_cpu_time_max_percent = 60

# 设置perf_event的最大取样速率
# 默认值: 100000，降低该值可以减少系统开销
kernel.perf_event_max_sample_rate = 6250

# 任务迁移开销（纳秒）
# 增加该值可以减少CPU间任务迁移，提高性能
#kernel.sched_migration_cost_ns = 5000000


################################################################################
# 原始配置中的部分参数（可能已被优化参数替代）
# 保留以便参考
################################################################################
# 原始配置中的部分参数可能已被合并或优化，如有特殊需求可取消注释使用

# vm.swappiness = 0  # 原始值，过度追求内存使用可能导致OOM风险
# fs.file-max = 65535  # 原始低值，已被更高值替代
# net.ipv4.tcp_fin_timeout = 5  # 原始过低值，可能导致连接不稳定
# net.ipv4.tcp_keepalive_time = 10  # 原始过低值，可能导致网络风暴
# net.ipv4.tcp_max_tw_buckets = 100  # 原始过低值，可能导致连接被过早关闭