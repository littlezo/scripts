
#swappiness=0的时候表示最大限度使用物理内存，然后才是 swap空间，swappiness＝100的时候表示积极的使用swap分区，并且把内存上的数据及时的搬运到swap空间里面。
vm.swappiness = 0

#设置系统所有进程一共可以打开的文件数量
fs.file-max = 40000500
# 一个进程可以打开的最大文件数，一个进程不能使用超过NR_OPEN文件描述符。
fs.nr_open = 40000500

#决定检查过期多久邻居条目
net.ipv4.neigh.default.gc_stale_time=120
#开启反向路径过滤,为0表示禁用。
net.ipv4.conf.all.rp_filter=0
#禁用反向路径检查
net.ipv4.conf.default.rp_filter=0
net.ipv4.conf.default.arp_announce = 2
net.ipv4.conf.all.arp_announce=2
#系统同时保持TIME_WAIT的最大数量，如果超过这个数字，TIME_WAIT将立刻被清除并打印警告信息。默认为180000
net.ipv4.tcp_max_tw_buckets = 100
#表示开启SYN Cookies。当出现SYN等待队列溢出时，启用cookies来处理，可防范少量SYN攻击，默认为1，表示打开,alvin测试结果显示该值为0时更能在面对SYN攻击时让系统稳定。
net.ipv4.tcp_syncookies = 1
#端口最大backlog内核限制,表示SYN队列的长度，加大队列长度可以容纳更多等待连接的网络连接数。此参数限制服务端应用程序可以设置的端口最大 backlog 值
net.ipv4.tcp_max_syn_backlog = 3240000
#表示设置tcp/ip会话的滑动窗口大小是否可变。参数值为布尔值，为1时表示可变，为0时表示不可变。
net.ipv4.tcp_window_scaling = 1
#间隔多久发送1次keepalive探测包  当keepalive打开的情况下，TCP发送keepalive消息的频率，
net.ipv4.tcp_keepalive_time = 60
#表示定义SYN重试次数,这里决定内核在放弃连接之前所送出的 SYN+ACK 数目。不应该大于255，默认值是5，对应于180秒左右时间
net.ipv4.tcp_synack_retries = 2
#表示重试次数，对于一个新建连接，内核要发送多少个 SYN 连接请求才决定放弃。不应该大于255，默认值是5，对应于180秒左右时间
net.ipv4.tcp_syn_retries = 2
net.ipv4.conf.lo.arp_announce=2
#针对TIME-WAIT，做为客户端可以启用
net.ipv4.tcp_tw_reuse = 1
#启用timewait 快速回收
# net.ipv4.tcp_tw_recycle = 1
#隔多久发送1次keepalive探测包  当keepalive打开的情况下，TCP发送keepalive消息的频率。缺省是2 小时
net.ipv4.tcp_keepalive_time = 10
#探测失败后，间隔几秒后重新探测
net.ipv4.tcp_keepalive_intvl = 15
#TCP发送keepalive探测，以确定该连接已经断开的次数。
net.ipv4.tcp_keepalive_probes = 3
#对于本端断开的socket连接，TCP保持在FIN_WAIT_2状态的时间
net.ipv4.tcp_fin_timeout = 5
#内存使用的下限  警戒值  上限
net.ipv4.tcp_mem = 768432 2097152 15242880
#socket接收缓冲区内存使用的下限  警戒值  上限
net.ipv4.tcp_rmem = 4096 4096 33554432
#socket发送缓冲区内存使用的下限  警戒值  上限
net.ipv4.tcp_wmem = 4096 4096 33554432
#已经成功建立连接的套接字将要进入队列的长度，	该参数定义了系统中每一个端口最大的监听队列的长度，是个全局参数。该参数和 net.ipv4.tcp_max_syn_backlog 有关联，后者指的是还在三次握手的半连接的上限，该参数指的是处于 ESTABLISHED 的数量上限。
net.core.somaxconn = 65535
#orphans的最大值
net.ipv4.tcp_max_orphans=1048576
#允许系统打开的端口范围
net.ipv4.ip_local_port_range = 2048 64500
#关闭IP转发， 如果该服务器扮演网关路由之类的角色，则设置为1开启。默认也是关闭
net.ipv4.ip_forward=0

#如果不注释该行，会导致nfs rpcbind服务无法启动。
#net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
net.ipv6.conf.lo.disable_ipv6 = 1


#默认的TCP数据发送窗口大小（字节）
net.core.wmem_default = 18388608
#默认的TCP数据接收窗口大小（字节）
net.core.rmem_default = 18388608
#最大的TCP数据接收窗口大小（字节）
net.core.rmem_max = 33554432
#最大的TCP数据发送窗口大小（字节）
net.core.wmem_max = 33554432
#网卡设备将请求放入队列的长度
net.core.netdev_max_backlog = 2621244

#表示每个套接字所允许的最大缓冲区的大小。
net.core.optmem_max = 25165824
#设置 conntrack 的上限，如果系统出现下述异常时要考虑调整：ping: sendmsg: Operation not permitted；kernel: nf_conntrack: table full, dropping packet.
net.netfilter.nf_conntrack_max=1000000
net.nf_conntrack_max=1000000
# net.ipv4.netfilter.ip_conntrack_max=1000000

kernel.sem=250 65536 100 2048
kernel.shmmni = 32768
kernel.shmmax = 34359738368
kernel.shmall = 4194304
kernel.msgmni = 32768
kernel.msgmax = 65536
#修改消息队列长度
kernel.msgmnb = 4203520
#关闭sysrq组合键
kernel.sysrq=0

#perf分析工具最大能够占用CPU性能的百分比
kernel.perf_cpu_time_max_percent=60
#设置perf_event的最大取样速率，默认值为100000
kernel.perf_event_max_sample_rate=6250
#
# kernel.sched_migration_cost_ns=5000000

kernel.sem=10000 2560000 10000 256


# 启用 BBR 拥塞控制算法，可以有效提高网络传输速度
net.core.default_qdisc = fq
net.ipv4.tcp_congestion_control = bbr
# 增加文件系统允许打开的最大文件数，避免出现 too many open files 的错误
fs.file-max = 65535
# 开启 TCP 时间戳选项，可以防止重复 ACK 攻击，提高 TCP 的可靠性
net.ipv4.tcp_timestamps = 1
# 开启 TCP 连接复用，可以减少 TIME_WAIT 状态的连接数量，节省资源
net.ipv4.tcp_tw_reuse = 1
# 减少 TCP 连接的 FIN 超时时间，加快连接的释放
net.ipv4.tcp_fin_timeout = 30
# 减少 TCP 连接的保活时间，避免长时间占用资源
net.ipv4.tcp_keepalive_time = 600
# 扩大 TCP 连接的本地端口范围，增加可用的端口数量
net.ipv4.ip_local_port_range = 10000 65000
# 增加 TCP 连接的 SYN 队列长度，提高并发连接的处理能力
net.ipv4.tcp_max_syn_backlog = 3240000
# 减少 TCP 连接的最大 TIME_WAIT 数量，防止端口耗尽
net.ipv4.tcp_max_tw_buckets = 5000
# 调整 TCP 连接的接收缓冲区大小，优化网络 I/O 性能
net.ipv4.tcp_rmem = 4096 87380 67108864
# 调整 TCP 连接的发送缓冲区大小，优化网络 I/O 性能
net.ipv4.tcp_wmem = 4096 65536 67108864
# 开启 TCP 连接的 MTU 探测功能，可以动态适应网络环境，避免分片
net.ipv4.tcp_mtu_probing = 1

# swoole
net.unix.max_dgram_qlen = 100
net.ipv4.tcp_mem  = 379008 505344 758016
net.core.wmem_default = 8388608
net.core.rmem_default = 8388608
net.core.rmem_max = 16777216
net.core.wmem_max = 16777216

net.ipv4.tcp_synack_retries=3
net.ipv4.tcp_syn_retries=3
net.ipv4.tcp_fin_timeout = 30
net.ipv4.tcp_keepalive_time = 300
net.ipv4.tcp_tw_reuse = 1
net.ipv4.ip_local_port_range = 20000 65000
net.ipv4.tcp_max_tw_buckets = 200000
net.ipv4.route.max_size = 5242880


# 内核恐慌时，1秒后自动重启
kernel.panic = 1
# 允许更多的 PID（简化滚动楼梯问题）；可能会破坏某些程序 32768
kernel.pid_max = 32768

# 内核所允许的最大共享内存段的大小（字节）
kernel.shmmax = 4294967296

# 在任何给定时刻，系统上都可以使用共享内存的核心（页面）
kernel.shmall = 1073741824

#设定程序核心时生成的文件名格式
kernel.core_pattern = core_%e

# 当发生oom时，自动转换为panic
vm.panic_on_oom = 1

# 表示强制Linux VM最低保留多少空闲内存（Kbytes）
vm.min_free_kbytes = 1048576

# 该值大于100，则将导致内核倾向于恢复目录和inode缓存
vm.vfs_cache_pressure = 250

# 表示系统进行交换行为的程度，数值（0-100）比例，越可能发生磁盘交换
vm.swappiness = 20

# 只需用10%做系统缓存
vm.dirty_ratio = 10

# 增加系统文件限制 2^20-1
#设置系统所有进程一共可以打开的文件数量
fs.file-max = 40000500
# 一个进程可以打开的最大文件数，一个进程不能使用超过NR_OPEN文件描述符。
fs.nr_open = 40000500


# 网络层优化
# 进入包的最大队列设备。默认是300
# net.core.netdev_max_backlog = 2000

# 开启SYN洪水攻击保护
net.ipv4.tcp_syncookies = 1

# 开启并记录欺骗，源路由和重定向包
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.log_martians = 1

# 处理无源路由的包
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

# 开启反向路径过滤
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1

#确定无人能修改路由表
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.secure_redirects = 0
# 增加系统IP端口限制
# net.ipv4.ip_local_port_range = 9000 65533
# 生存时间
net.ipv4.ip_default_ttl = 64
# 打开 TIME-WAIT 设备重用功能，对于存在大量连接的 Web 服务器非常有效。
net.ipv4.tcp_tw_reuse = 1 #让TIME_WAIT状态可以重用，这样即使TIME_WAIT占满了所有端口，也不会拒绝新的请求造成障碍默认为0
# 表示是否启用一种比超时重发更精确的方法（请参阅 RFC 1323）来启用对 RTT 的计算；为了实现更好的性能应该启用该选项
net.ipv4.tcp_timestamps = 0
# 表示本机向外发起TCP SYN连接超时重传的次数
net.ipv4.tcp_syn_retries = 3
net.ipv4.tcp_synack_retries = 3
# 减少一个FIN-WAIT-2连接状态的时间，使系统可以处理更多的连接。
net.ipv4.tcp_fin_timeout = 10
# 减少TCP KeepAlive连接检测的时间，使系统可以处理更多的连接。
# 如果某个TCP连接在空闲300秒后，内核才发起探测。如果探测2次(每次2秒)不成功，内核才彻底放弃，认为该连接已失效。
net.ipv4.tcp_keepalive_time = 300
net.ipv4.tcp_keepalive_probes = 2
net.ipv4.tcp_keepalive_intvl = 2
# 系统可用处理不属于任何进程的TCP套接字最大数量
net.ipv4.tcp_max_orphans = 262144
# 系统同时保持 TIME_WAIT 导入的最大数量，如果超过此数字，TIME_WAIT 导入将立即被清除并打印警告信息。
net.ipv4.tcp_max_tw_buckets = 20000
# arp_table的服务器限制优化
net.ipv4.neigh.default.gc_thresh1 = 128
net.ipv4.neigh.default.gc_thresh2 = 512
net.ipv4.neigh.default.gc_thresh3 = 4096

