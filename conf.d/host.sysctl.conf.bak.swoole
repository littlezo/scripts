# # # ======================================================================
# Linux内核参数优化配置文件
# 基于系统硬件: 98GB内存, 32核心CPU
# 分类整理并优化，以提高系统性能、稳定性和安全性
# ======================================================================


# ================================ 内存管理优化 ================================
# 控制系统的交换行为，0-100，值越大越倾向于使用swap
# 对于大内存服务器，设为10以优先使用物理内存
vm.swappiness = 10

# 系统在开始写入脏数据到磁盘之前，可以容忍的脏数据百分比
# 降低此值可以减少系统因突然断电丢失的数据量
vm.dirty_ratio = 10

# 后台进程开始将脏数据写入磁盘的百分比
vm.dirty_background_ratio = 5

# 脏数据在内存中停留的最长时间（秒）
vm.dirty_expire_centisecs = 3000

# 系统定期检查脏数据的时间间隔（秒）
vm.dirty_writeback_centisecs = 500

# 强制Linux VM最低保留的空闲内存（Kbytes）
# 根据系统内存大小调整，对于98GB内存设为1GB
vm.min_free_kbytes = 1048576

# 控制内核回收目录和inode缓存的倾向，默认100
# 值大于100会增加回收缓存的倾向
vm.vfs_cache_pressure = 150

# OOM时是否触发panic，设为0允许系统尝试恢复
vm.panic_on_oom = 0


# ================================ 文件系统优化 ================================
# 设置系统所有进程一共可以打开的文件数量上限
fs.file-max = 40000500

# 单个进程可以打开的最大文件数
fs.nr_open = 40000500


# ================================ 共享内存和信号量 ===========================
# 系统信号量参数设置：SEMMSL(每个用户的最大信号量数), SEMMNS(系统信号量总数),
# SEMOPM(每个semop调用的最大操作数), SEMMNI(系统信号量集总数)
kernel.sem = 10000 2560000 10000 256

# 系统共享内存段数量上限
kernel.shmmni = 32768

# 内核所允许的最大共享内存段的大小（字节），设为4GB
kernel.shmmax = 4294967296

# 系统可使用的共享内存总量（页），设为4GB/4KB=1073741824
kernel.shmall = 1073741824

# 消息队列标识符数量上限
kernel.msgmni = 32768

# 单个消息的最大大小（字节）
kernel.msgmax = 65536

# 单个消息队列的最大大小（字节）
kernel.msgmnb = 4203520


# ================================ 内核优化 ================================
# 内核恐慌时自动重启的时间（秒）
kernel.panic = 10

# 系统PID号的最大值
kernel.pid_max = 32768

# 程序崩溃时生成的core文件名格式
kernel.core_pattern = core_%e

# 关闭sysrq组合键，提高系统安全性
kernel.sysrq = 0

# perf分析工具最大能够占用CPU性能的百分比
kernel.perf_cpu_time_max_percent = 30

# 设置perf_event的最大取样速率
kernel.perf_event_max_sample_rate = 6250


# ================================ 网络基础优化 ================================
# IPv6相关配置 - 保持lo接口启用IPv6，其他接口禁用
# net.ipv6.conf.all.disable_ipv6 = 1  # 注释掉以避免影响nfs rpcbind服务
net.ipv6.conf.default.disable_ipv6 = 1
net.ipv6.conf.lo.disable_ipv6 = 1

# 关闭IP转发，除非作为路由器使用
net.ipv4.ip_forward = 0

# IP数据包的生存时间(TTL)
net.ipv4.ip_default_ttl = 64


# ================================ TCP/IP连接优化 ================================
# 开启SYN Cookies，可以防范SYN洪水攻击
net.ipv4.tcp_syncookies = 1

# 设置SYN队列长度，提高并发连接处理能力
net.ipv4.tcp_max_syn_backlog = 3240000

# 定义SYN重试次数，减少连接建立时间
net.ipv4.tcp_syn_retries = 3
net.ipv4.tcp_synack_retries = 3

# 优化TIME-WAIT状态连接处理
# 允许重用处于TIME-WAIT状态的连接
net.ipv4.tcp_tw_reuse = 1
# 不启用快速回收，避免NAT环境下的问题
# net.ipv4.tcp_tw_recycle = 1

# 系统同时保持TIME-WAIT的最大数量，设为合理值避免连接被过早关闭
# 原值100过低，200000过高，调整为180000（系统默认值的合理调整）
net.ipv4.tcp_max_tw_buckets = 180000

# 减少FIN-WAIT-2连接状态的超时时间，加速连接释放
net.ipv4.tcp_fin_timeout = 30

# TCP连接保持活跃的时间（秒），避免长时间占用资源
net.ipv4.tcp_keepalive_time = 600

# 探测失败后的重试间隔（秒）
net.ipv4.tcp_keepalive_intvl = 15

# 探测失败多少次后认为连接已断开
net.ipv4.tcp_keepalive_probes = 3

# 开启TCP时间戳选项，可以防止重复ACK攻击
net.ipv4.tcp_timestamps = 1

# 开启TCP窗口缩放功能，提高带宽利用率
net.ipv4.tcp_window_scaling = 1

# 开启TCP连接的MTU探测功能，动态适应网络环境
net.ipv4.tcp_mtu_probing = 1


# ================================ 网络缓冲区优化 ================================
# 系统可用处理不属于任何进程的TCP套接字最大数量
net.ipv4.tcp_max_orphans = 1048576

# 内存使用的下限、警戒值、上限（页）
# 根据系统内存大小优化
net.ipv4.tcp_mem = 768432 2097152 15242880

# socket接收缓冲区内存使用的下限、警戒值、上限（字节）
net.ipv4.tcp_rmem = 4096 87380 67108864

# socket发送缓冲区内存使用的下限、警戒值、上限（字节）
net.ipv4.tcp_wmem = 4096 65536 67108864

# 默认的TCP数据接收窗口大小（字节）
net.core.rmem_default = 18388608

# 默认的TCP数据发送窗口大小（字节）
net.core.wmem_default = 18388608

# 最大的TCP数据接收窗口大小（字节）
net.core.rmem_max = 33554432

# 最大的TCP数据发送窗口大小（字节）
net.core.wmem_max = 33554432

# 每个套接字所允许的最大缓冲区大小（字节）
net.core.optmem_max = 25165824


# ================================ 网络队列优化 ================================
# 已建立连接的套接字队列长度
net.core.somaxconn = 65535

# 网卡设备将请求放入队列的最大长度
# 根据系统处理能力调整，避免队列过长导致延迟增加
net.core.netdev_max_backlog = 2621244


# ================================ 端口和路由优化 ================================
# 允许系统使用的本地端口范围
net.ipv4.ip_local_port_range = 10000 65000

# 系统路由表的最大条目数
net.ipv4.route.max_size = 5242880


# ================================ ARP缓存优化 ================================
# 决定检查过期邻居条目的时间间隔（秒）
net.ipv4.neigh.default.gc_stale_time = 120

# ARP表缓存的最小、警告、最大值
net.ipv4.neigh.default.gc_thresh1 = 128
net.ipv4.neigh.default.gc_thresh2 = 512
net.ipv4.neigh.default.gc_thresh3 = 4096

# 优化ARP通告行为
net.ipv4.conf.default.arp_announce = 2
net.ipv4.conf.all.arp_announce = 2
net.ipv4.conf.lo.arp_announce = 2


# ================================ 网络安全优化 ================================
# 开启并记录欺骗、源路由和重定向包
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.log_martians = 1

# 禁止接受源路由的包
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

# 禁止接受ICMP重定向包
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.secure_redirects = 0

# 配置反向路径过滤 - 宽松模式，避免在复杂网络环境下误判
net.ipv4.conf.all.rp_filter = 0
net.ipv4.conf.default.rp_filter = 0


# ================================ 连接跟踪优化 ================================
# 设置conntrack表的最大条目数，避免出现表满导致的丢包
net.netfilter.nf_conntrack_max = 1000000
net.nf_conntrack_max = 1000000


# ================================ 高级网络优化 ================================
# 启用BBR拥塞控制算法，提高网络传输速度
net.core.default_qdisc = fq
net.ipv4.tcp_congestion_control = bbr


# ================================ Unix域套接字优化 ================================
# Unix域套接字数据报队列长度
net.unix.max_dgram_qlen = 100


# ================================ Swoole相关优化 ================================
# 保留的Swoole相关参数
# 根据实际使用情况可调整以下参数
# net.ipv4.tcp_mem = 379008 505344 758016
# net.core.wmem_default = 8388608
# net.core.rmem_default = 8388608
# net.core.rmem_max = 16777216
# net.core.wmem_max = 16777216